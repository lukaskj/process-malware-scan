const axios = require('axios')
const shell = require('child_process')
const crypto = require('crypto')
const fs = require('fs')

// windows
// WMIC PROCESS get ExecutablePath
// https://www.virustotal.com/en/documentation/public-api/
function getProcessList() {
   return new Promise((pResolve, pReject) => {
      let processList = []
      shell.exec("WMIC PROCESS get ExecutablePath", (err, stdout, str) => {
         let list = stdout.split("\n").map(p => p.trim()).filter(p => p).reduce((c, p) => { c.indexOf(p) < 0 ? c.push(p) : null; return c }, [])
         for (let filename of list) {
            if (fs.existsSync(filename)) {
               processList.push(new Promise((resolve, reject) => {
                  let md5sum = crypto.createHash('md5')
                  var s = fs.ReadStream(filename);
                  s.on('data', function (d) {
                     md5sum.update(d);
                  });

                  s.on('end', function () {
                     var d = md5sum.digest('hex');
                     resolve({
                        hash: d,
                        filename: filename
                     })
                  });
               }))
            } else {
               // reject(filename)
            }
         }
         Promise.all(processList).then(list => {
            pResolve(list)
         }).catch(err => {
            pReject(err)
         })
      })
   })
}
exports.getProcessList = getProcessList
exports.axios = axios