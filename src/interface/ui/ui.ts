import { MultiBar, Presets, SingleBar } from "cli-progress";
import { Service } from "typedi";

@Service()
export class Ui {
  private multiBars: MultiBar | null = null;
  private bars: Map<string, SingleBar> = new Map<string, SingleBar>();

  public initMultiBars(ids: Record<string, number>, title?: string): void {
    if (this.multiBars) {
      this.multiBars.stop();
    }

    if (title) {
      console.log(`[+] ${title}`);
    }

    this.multiBars = new MultiBar(
      {
        format: "|" + "{bar}" + "| {source} | {percentage}% | {value}/{total} | {eta_formatted}",
        barCompleteChar: "\u2588",
        barIncompleteChar: "\u2591",
        hideCursor: true,
      },
      Presets.shades_grey,
    );

    for (const key of Object.keys(ids)) {
      const bar = this.multiBars.create(ids[key], 0, { souce: key });
      bar.update(0, { source: key });
      this.bars.set(key, bar);
    }
  }

  public incrementBar(id: string, amount: number = 1): void {
    const bar = this.bars.get(id);
    if (bar) {
      bar.increment(amount, { source: id });
    }
  }

  public stopBars(): void {
    this.multiBars?.stop();
    this.multiBars = null;
  }
}
