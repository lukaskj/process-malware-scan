import React from 'react'
import { connect } from 'react-redux'
import { bindActionCreators } from 'redux'

import { onSearch } from './searchReducer'
import { getProcessList } from '../processList/processListActions'

class Layout extends React.Component {
   constructor(props) {
      super(props)
   }

   render() {
      return (
         <div>
            <nav className="navbar sticky-top navbar-expand-lg navbar-dark bg-dark justify-content-between">
               <a className="navbar-brand" href="#">Process list</a>
               {/* <button className="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                  <span className="navbar-toggler-icon"></span>
               </button> */}
               {/* <div className="row">
               <div className="col">
               test
               </div>
            </div> */}
               <div className="form-inline my-2 my-lg-0">
                  <button className="btn btn-outline-info mr-sm-2" onClick={this.props.getProcessList}><i className="fa fa-refresh"></i> Refresh</button>
                  <input className="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search" value={this.props.searchText} onChange={(e) => this.props.onSearch(e.target.value)} />
                  {/* <button className="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button> */}
               </div>
            </nav>
            <div className="row">
            <div className="col-12">
               {this.props.children}
            </div>
            </div>
         </div>
      )
   }
}

const mapStateToProps = globalState => ({
   searchText: globalState.search.text
})

const mapActionToProps = dispatch => bindActionCreators({ onSearch, getProcessList }, dispatch)

export default connect(mapStateToProps, mapActionToProps)(Layout)