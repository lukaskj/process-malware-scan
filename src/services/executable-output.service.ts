import { Service } from "typedi";
import { writeFile } from "fs/promises";
import { IExecutable } from "../contracts/executable.interface";
import { OutputJson, TOptions } from "../services/types";
import { isNullOrUndefined } from "../utils/is-null-or-undefined";

@Service()
export class ExecutableOutputService {
  public async saveExecutablesToJson(executableList: IExecutable[], _opts: TOptions): Promise<void> {
    const output: Partial<OutputJson> = {};
    output.all = executableList;

    for (const i of executableList) {
      if (isNullOrUndefined(output[i.hash])) {
        output[i.hash] = [];
      }
      output[i.hash]?.push(i);
    }

    await writeFile("output.json", JSON.stringify(output));
  }
}
