import { Service } from "typedi";
import { IExecutable } from "../../contracts/executable.interface";
import { IScrapper } from "./scrapper.interface";
import { Powershell } from "../../utils/powershell";
import { Executable } from "../../entities/executable.entity";

@Service()
export class ScheduledTasksScrapper implements IScrapper {
  public name: string = "Scheduled Tasks";

  constructor(private shell: Powershell) {}

  public async listExecutables(): Promise<IExecutable[]> {
    const output = await this.shell.run(["(Get-ScheduledTask).Actions"]);
    const outputArr = output.split("\n");

    const executables: Executable[] = [];
    const executableRegex = /:\s(.+)/g;

    for (const line of outputArr) {
      if (!line.startsWith("Execute")) {
        continue;
      }
      const match = line.match(executableRegex);
      if (!match || !match.length) {
        continue;
      }
      const path = match[0].substring(2).replaceAll('"', "");
      executables.push(new Executable("Scheduled Task", path));
    }

    return executables;
  }
}
