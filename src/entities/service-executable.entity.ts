import { ExecutableSource } from "../enum/executable-source.enum";
import { NonFunctionProperties } from "../types";
import { getPathAndArgs } from "../utils/get-path-and-args";
import { Executable } from "./executable.entity";

export class ServiceExecutable extends Executable {
  public args: string;
  public status: string;

  constructor(data?: Omit<NonFunctionProperties<ServiceExecutable>, "source">) {
    super(data?.name || "", data?.path || "", ExecutableSource.SERVICE, data?.hash || "");
    this.args = data?.args || "";
    this.status = data?.status || "";
  }

  public cleanStrings(): void {
    this.name = this.name.trim();
    this.args = this.args.trim();
    this.status = this.status.trim();
    this.hash = this.hash?.trim();
    this.path = this.path
      .replace(/[\n\t\r]/gi, "")
      .replace("\\r", "")
      .trim();
  }

  public fillArgsFromPath(): void {
    const pathAndArgs = getPathAndArgs(this.path);
    this.path = pathAndArgs.path;
    this.args = pathAndArgs.args;
  }
}
