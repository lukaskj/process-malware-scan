import { actions } from './processListActions'
const _KEY_ = "__VTP"

const INITIAL_STATE = {
   list: getCurrentList(),
   loading: false
}

function getCurrentList() {
   return JSON.parse(localStorage.getItem(_KEY_) || '[]')
}

function setCurrentList(list) {
   localStorage.setItem(_KEY_, JSON.stringify(list))
}

export default (state = INITIAL_STATE, action) => {
   switch(action.type) {
      case actions.GET_PROCESS_LIST:
         let oldList = getCurrentList().map(p => { p.running = false; return p; })
         let list = action.payload
         for (let p of list) {
            if (!oldList.find(e => e.hash == p.hash)) {
               p.running = true
               oldList.push(p)
            }
         }
         for (let p of oldList) {
            p.running = !!list.find(e => e.hash == p.hash)
         }
         setCurrentList(oldList)
         return { ...state, list: oldList}
      case actions.LOADING:
         return { ...state, loading: action.payload }
      default:
         return state
   }
}