export function getProcessList() {
   return dispatch => {
      dispatch(setLoading(true))
      window.getProcessList().then(function (data) {
         dispatch(setLoading(false))
         dispatch({
            type: actions.GET_PROCESS_LIST,
            payload: data
         })
      })
   }
}


export function getReport(hash) {
   return dispatch => {
      dispatch(setProcessLoading(hash, true))
      setTimeout(() => {
         window.axios.get(`https://www.virustotal.com/ui/search?query=${hash}`, { headers: { "Referer": "" } }).then(data => {
            dispatch(setProcessLoading(hash, false))
            let processData = data.data.data
            let stats = null
            let reportUrl = null
            if (processData.length) {
               stats = processData[0].attributes.last_analysis_stats
               // reportUrl = data.data.links ? data.data.links.self : null
               reportUrl = 'https://www.virustotal.com/#/file/' + hash
            }
            dispatch({
               type: actions.PROCESS_REPORT,
               payload: {
                  hash,
                  stats,
                  reportUrl
               }
            })
         }).catch(err => {
            dispatch(setProcessLoading(hash, false))
            if (!window.messageShowed) {
               window.messageShowed = true
               let error = err.message
               if (error.indexOf("429") >= 0) {
                  // error = 'Too many requests. Need to validate captcha at Virus Total Website before "Check all process" again. Click "OK" to go to site'
                  // if(confirm(error)) {
                  //    window.openExternal('https://www.virustotal.com/#/search/' + hash)
                  // }
                  // window.messageShowed = false
               } else {
                  // alert(error)
               }
               console.error(err)
            }
         })
      }, Math.floor(Math.random() * 1000))
   }
}

export function setProcessLoading(hash, flag = true) {
   return {
      type: actions.PROCESS_LOADING,
      payload: { hash, flag }
   }
}

export function setLoading(flag) {
   return {
      type: actions.LOADING,
      payload: flag
   }
}

export function clearList() {
   return {
      type: actions.CLEAR_LIST,
      payload: null
   }
}

export const actions = {
   GET_PROCESS_LIST: "GET_PROCESS_LIST",
   LOADING: "PROCESS_LIST_LOADING",
   PROCESS_LOADING: "#@@PROCESS_LOADING",
   PROCESS_REPORT: "#$#@Q$PROCESS_REPORT",
   CLEAR_LIST: "$#$CLEAR_LIST"
}