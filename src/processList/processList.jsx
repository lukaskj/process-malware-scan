import React from 'react'
import { connect } from 'react-redux'
import { bindActionCreators } from 'redux'

import ProcessListFilter from './processListFilter'

class ProcessList extends React.Component {
   constructor(props) {
      super(props)
      this.state = { list: [] }
   }

   render() {
      return (
         <div>
            <ProcessListFilter />
            <table className="table table-bordered">
               <thead>
                  <tr>
                     <th scope="col">Process (Total: {this.props.processList.list.length}) (Total running: {this.props.processList.list.filter(p => p.running).length})</th>
                     <th scope="col" style={{width: '10px'}}>Running</th>
                     <th scope="col" style={{width: '10px'}}>Actions</th>
                  </tr>
               </thead>
               <tbody>
                  {this.props.processList.list.map(p => {
                        if (!this.props.searchText || p.filename.toLowerCase().indexOf(this.props.searchText.toLowerCase()) >= 0)
                        return (
                           <tr key={p.hash}>
                              <td scope="col" key={p.hash} className="align-middle">{p.filename}</td> 
                              <td style={{fontSize: '2em', padding: 0}} className="text-center"><i className={`fa ${p.running ? 'fa-check-circle' : 'fa-times-circle'}`}></i></td>
                              <td style={{}} className="text-center"><button className="btn btn-primary btn-sm">Results</button></td>
                           </tr>
                        )
                     }
                  )}
               </tbody>
            </table>
         </div>
      )
   }
}

const mapStateToProps = globalState => ({
   searchText: globalState.search.text,
   processList: globalState.processList
})

// const mapActionsToProps = dispatch => bindActionCreators({ getProcessList, onSearch }, dispatch)

export default connect(mapStateToProps, null)(ProcessList)