import React from 'react'
import { connect } from 'react-redux'
import { bindActionCreators } from 'redux'

import ProcessListFilter from './processListFilter'
import If from '../common/if'

class ProcessList extends React.Component {
   constructor(props) {
      super(props)
      this.state = { list: [] }
   }

   openReport(url) {
      window.openExternal(url)
   }

   render() {
      return (
         <div>
            <ProcessListFilter />
            <table className="table table-bordered">
               <thead>
                  <tr>
                     <th scope="col">Total: {this.props.processList.list.length} (Running: {this.props.processList.list.filter(p => p.running).length})</th>
                     <th scope="col" style={{ width: '10px' }}>Running</th>
                     <th scope="col" style={{ width: '10px' }}>Report</th>
                  </tr>
               </thead>
               <tbody>
                  {this.props.processList.list.map(p => {
                     if (!this.props.searchText || p.filename.toLowerCase().indexOf(this.props.searchText.toLowerCase()) >= 0)
                        return (
                           <tr key={p.hash}>
                              <td scope="col" key={p.hash} className="align-middle">{p.filename}</td>
                              <td style={{ fontSize: '2em', padding: 0 }} className="text-center"><If test={p.running}><i className={`fa ${p.running ? 'fa-check' : 'fa-times-circle'}`}></i></If></td>
                              <td style={{}} nowrap="nowrap" className="text-center align-middle">
                                 <If test={!p.loading && p.reportUrl}>
                                    <button onClick={(e) => this.openReport(p.reportUrl)} target="_blank" className={`btn ${p.danger == 2 ? 'btn-danger' : p.danger == 1 ? 'btn-warning' : 'btn-success'} btn-sm`}>
                                       <If test={p.danger}>
                                          <i className="fa fa-warning"></i> &nbsp;
                                       </If>
                                       <i className="fa fa-eye"></i>
                                    </button>
                                 </If>
                                 <If test={p.reportUrl === false}>
                                    No report
                                 </If>
                                 <If test={p.loading}>
                                    <div className="progress">
                                       <div className="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100" style={{ width: "100%" }}></div>
                                    </div>
                                 </If>
                              </td>
                           </tr>
                        )
                  }
                  )}
               </tbody>
            </table>
         </div>
      )
   }
}

const mapStateToProps = globalState => ({
   searchText: globalState.search.text,
   processList: globalState.processList
})

// const mapActionsToProps = dispatch => bindActionCreators({ getProcessList, onSearch }, dispatch)

export default connect(mapStateToProps, null)(ProcessList)