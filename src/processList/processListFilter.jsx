import React from 'react'
import { connect } from 'react-redux'
import { bindActionCreators } from 'redux'

import { getProcessList, getReport, clearList } from './processListActions'
import { onSearch } from '../layout/searchReducer'

class ProcessListFilter extends React.Component {
   constructor(props) {
      super(props)
      this.state = { timeout: 0 }
      this.startTimeout = this.startTimeout.bind(this)
      this.id = null
   }

   componentWillMount() {
      // this.setCurrentList([])
      // this.props.getProcessList()
   }

   startTimeout() {
      this.setState({ timeout: 60 })
      this.id = setInterval(() => {
         let timeout = this.state.timeout - 1
         if (timeout <= 0 && this.id) {
            clearInterval(this.id)
            this.id = null
         }
         this.setState({ timeout })
      }, 1000)
   }

   getAllReports() {
      if (this.props.processList.list.find(p => p.reportUrl)) {
         this.startTimeout()
      }
      for (let p of this.props.processList.list) {
         if (!p.reportUrl) {
            this.props.getReport(p.hash)
         }
      }
   }

   render() {
      return (
         <nav className="navbar sticky-top navbar-expand-lg navbar-dark bg-dark justify-content-between">
            {/* <a className="navbar-brand" href="#">Filter</a> */}
            <div className="form-inline my-2 my-lg-0">
               <button disabled={this.props.processList.loading} className="btn btn-outline-default mr-sm-2" onClick={this.props.getProcessList}><i className="fa fa-refresh"></i> Refresh list</button>
               <input className="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search" value={this.props.searchText} onChange={(e) => this.props.onSearch(e.target.value)} />
            </div>
            <button className="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
               <span className="navbar-toggler-icon"></span>
            </button>
            <div>
               <button disabled={this.state.timeout} className="btn btn-outline-success mr-sm-2" onClick={e => this.getAllReports()}><i className="fa fa-cloud-upload"></i> {this.state.timeout ? this.state.timeout : ''} Check all process <i className="fa fa-user-md"></i></button>
               <button className="btn btn-outline-secondary mr-sm-2" onClick={this.props.clearList}> Clear list <i className="fa fa-trash"></i></button>
            </div>
         </nav>
      )
   }
}


const mapStateToProps = globalState => ({
   searchText: globalState.search.text,
   processList: globalState.processList
})

const mapActionsToProps = dispatch => bindActionCreators({ getProcessList, onSearch, getReport, clearList }, dispatch)

export default connect(mapStateToProps, mapActionsToProps)(ProcessListFilter)