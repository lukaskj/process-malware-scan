import React from 'react'
import { connect } from 'react-redux'
import { bindActionCreators } from 'redux'

import { getProcessList, getReport, clearList } from './processListActions'
import { onSearch } from '../layout/searchReducer'

class ProcessListFilter extends React.Component {
   componentWillMount() {
      // this.setCurrentList([])
      this.props.getProcessList()
   }

   getAllReports() {
      for (let p of this.props.processList.list) {
         if (!p.reportUrl) {
            this.props.getReport(p.hash)
         }
      }
   }

   render() {
      return (
         <nav className="navbar sticky-top navbar-expand-lg navbar-dark bg-dark justify-content-between">
            {/* <a className="navbar-brand" href="#">Filter</a> */}
            <div className="form-inline my-2 my-lg-0">
               <button disabled={this.props.processList.loading} className="btn btn-outline-default mr-sm-2" onClick={this.props.getProcessList}><i className="fa fa-refresh"></i> Refresh</button>
               <input className="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search" value={this.props.searchText} onChange={(e) => this.props.onSearch(e.target.value)} />
            </div>
            <button className="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
               <span className="navbar-toggler-icon"></span>
            </button>
            {/* <div className="collapse navbar-collapse" id="navbarNavAltMarkup">
               <div className="navbar-nav">
                  <a className="nav-item nav-link active" href="#">Home <span className="sr-only">(current)</span></a>
                  <a className="nav-item nav-link" href="#">Features</a>
                  <a className="nav-item nav-link" href="#">Pricing</a>
                  <a className="nav-item nav-link disabled" href="#">Disabled</a>
               </div>
            </div> */}
            <div>
            <button className="btn btn-outline-success mr-sm-2" onClick={e => this.props.getReport(this.props.processList.list[0].hash)}><i className="fa fa-cloud-upload"></i> Check all <i className="fa fa-user-md"></i></button>
            <button className="btn btn-outline-secondary mr-sm-2" onClick={this.props.clearList}> Clear list <i className="fa fa-trash"></i></button>
            </div>
         </nav>
      )
   }
}


const mapStateToProps = globalState => ({
   searchText: globalState.search.text,
   processList: globalState.processList
})

const mapActionsToProps = dispatch => bindActionCreators({ getProcessList, onSearch, getReport, clearList }, dispatch)

export default connect(mapStateToProps, mapActionsToProps)(ProcessListFilter)