import { faker } from "@faker-js/faker";
import child_process from "node:child_process";
import Container from "typedi";
import { Powershell } from "../powershell";

jest.mock("node:child_process");

describe("Utils", () => {
  describe("Powershell", () => {
    it("should fail on error", async () => {
      const errorMessage = faker.random.word();
      child_process.spawnSync = jest.fn().mockReturnValueOnce({
        error: new Error(errorMessage),
      });

      const shell = Container.get(Powershell);

      const result = shell.run([""]);
      await expect(result).rejects.toThrow(errorMessage);
    });

    it("should return output correctly", async () => {
      const output = faker.random.word();
      child_process.spawnSync = jest.fn().mockReturnValueOnce({
        stdout: output,
      });

      const shell = Container.get(Powershell);

      const result = await shell.run([""]);
      expect(result).toBe(output);
    });
  });
});
